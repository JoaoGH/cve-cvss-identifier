import requests
import json
import cvss

def getCVEContent(code):
    base = "https://cve.circl.lu/api/cve/"
    url = base + code
    content = requests.get(url)
    return content

def showCVE(cve):
    print(json.dumps(cve, indent=4))

def calculateCVSS(cve):
    vector = cve.get('cvss-vector')

    if vector is None:
        return None

    vector = vector.split("/")

    # basescore
    AccessVector = vector[0]
    AccessComplexity = vector[1]
    Authentication = vector[2]
    ConfidentialityImpact = vector[3]
    IntegrityImpact = vector[4]
    AvailabilityImpact = vector[5]

    vector_v2 = ""
    vector_v2 += AccessVector + "/"
    vector_v2 += AccessComplexity + "/"
    vector_v2 += Authentication + "/"
    vector_v2 += ConfidentialityImpact + "/"
    vector_v2 += IntegrityImpact + "/"
    vector_v2 += AvailabilityImpact

    # temporais
    vector_v2 += "/E:" + "ND" ##['ND' ,'U', 'POC', 'F', 'H']
    vector_v2 += "/RL:" + "ND" ##['ND' ,'OF', 'TF', 'W', 'U']
    vector_v2 += "/RC:" + "ND" ##['ND' ,'UC', 'C', 'UR']

    # ambientais
    vector_v2 += "/CDP:" + "ND" ##['ND', 'N' ,'L', 'LM', 'MH', 'H']
    vector_v2 += "/TD:" + "ND" ##['ND' ,'L', 'M', 'H']
    vector_v2 += "/CR:" + "ND" ##['ND' ,'N', 'L', 'M', 'H']
    vector_v2 += "/IR:" + "ND" ##['ND' ,'L', 'M', 'H']
    vector_v2 += "/AR:" + "ND" ##['ND' ,'L', 'M', 'H']

    c = cvss.CVSS2(vector_v2)

    return c

code = input("Insira o c√≥digo da CVE: ")

cve = getCVEContent(code)

cvssData = calculateCVSS(cve.json())

showCVE(cve.json())
